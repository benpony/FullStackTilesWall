{"version":3,"sources":["assets/white-frame.svg","assets/brick-room-opacity_max.png","actions/userActions.js","actions/actionTypes.js","actions/orderActions.js","components/navigationDrawer/NavigationDrawerStyle.js","components/navigationDrawer/NavigationDrawer.js","actions/adminActions.js","components/login/LoginStyle.js","components/index.js","components/login/Login.js","components/imagesWall/imagesWallStyle.js","components/uploadImage/UploadImage.js","components/framedImage/FramedImage.js","components/orderForm/OrderFormStyle.js","components/orderForm/OrderForm.js","components/imagesWall/ImagesWall.js","components/orderCard/OrderCardStyle.js","components/orderCard/OrderCard.js","components/orderLIst/OrderList.js","components/UserOrderList/UserOrderList.js","components/adminOrderList/AdminOrderList.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/rootReducer.js","reducers/userReducer.js","reducers/ordersReducer.js","reducers/adminReducer.js","index.js"],"names":["module","exports","userChanged","user","dispatch","type","userChangedSuccess","options","headers","loadUserOrders","uuid","length","axios","get","then","response","descArray","data","orders","reverse","catch","console","error","createUserOrder","post","order","useStyles","makeStyles","list","width","listItem","height","color","fontWeight","fontFamily","listIcon","fontSize","fullList","divider","marginTop","menuButton","marginRight","withRouter","history","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","key","className","root","map","Fragment","Button","onClick","Drawer","onClose","clsx","role","onKeyDown","List","text","index","ListItem","button","ListItemText","primary","Divider","navItem","push","ListItemIcon","loadAdminOrders","admin","adminPassword","users","adminChangedSuccess","theme","loginForm","flexGrow","display","flexDirection","alignItems","justifyContent","fields","margin","field","buttons","spacing","renderTextField","label","input","meta","touched","invalid","custom","TextField","helperText","variant","reduxForm","form","validate","values","errors","forEach","connect","props","pristine","submitting","reset","noValidate","Field","name","component","onChange","newValue","adminChanged","disabled","textAlign","grid","maxWidth","borderWidth","pickSomePhotosText","paddingTop","textTransform","letterSpacing","minHeight","UploadImage","imageList","callback","imageNumber","this","maxNumber","multiple","maxFileSize","acceptType","defaultValue","onImageUpload","onImageRemoveAll","undefined","image","src","dataURL","onUpdate","FramedImage","isSelected","location","e","preventDefault","stopPropagation","Frame","orderForm","textField","minWidth","email","test","autoComplete","Grid","container","direction","justify","item","xs","address","images","setImages","imageSelectionChanged","isItemsSelected","splice","array","Array","isArray","numOfTiles","window","innerWidth","val","sm","uuidv4","date","Date","setTimeout","isOrderComplete","borderRadius","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","opacity","center","typography","id","lineHeight","OrderCard","hidePreview","expanded","setExpanded","Card","CardHeader","Avatar","aria-label","charAt","title","subheader","moment","format","CardMedia","CardActions","disableSpacing","IconButton","style","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","Typography","img","OrderList","md","_orders","setOrders","useEffect","Autocomplete","freeSolo","from","Set","option","filter","renderInput","params","placeholder","_users","setUsers","a","Cookies","set","expires","createBrowserHistory","path","UserOrderList","AdminOrderList","Login","ImagesWall","Boolean","hostname","match","rootReducer","combineReducers","initialState","action","reduxFormReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","responsiveFontSizes","createMuiTheme","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4b5d8466.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white-frame.e6914697.svg\";","module.exports = __webpack_public_path__ + \"static/media/brick-room-opacity_max.1a44c753.png\";","import * as types from \"./actionTypes\";\r\n\r\nexport function userChanged( user ) {\r\n\treturn dispatch => {\r\n\t\tdispatch( userChangedSuccess( user ) );\r\n\t};\r\n}\r\n\r\nexport function userChangedSuccess( user ) {\r\n\treturn { type: types.USER_CHANGED_SUCCESS, user };\r\n}\r\n","export const USER_CHANGED_SUCCESS = \"USER_CHANGED_SUCCESS\";\r\nexport const LOAD_USER_ORDERS_SUCCESS = \"LOAD_USER_ORDERS_SUCCESS\";\r\nexport const CREATE_USER_ORDER_SUCCESS = \"CREATE_USER_ORDER_SUCCESS\";\r\n\r\nexport const ADMIN_CHANGED_SUCCESS = \"ADMIN_CHANGED_SUCCESS\";\r\nexport const LOAD_ALL_USERS_ORDERS_SUCCESS = \"LOAD_ALL_USERS_ORDERS_SUCCESS\";\r\n\r\n","import axios from \"axios\";\r\nimport * as types from \"./actionTypes\";\r\n\r\nconst options = {\r\n\theaders: { \"Content-Type\": \"application/json\" }\r\n};\r\n\r\nexport function loadUserOrders( uuid ) {\r\n\treturn dispatch => {\r\n\t\tif( uuid && uuid.length ){\r\n\t\t\taxios.get( `/orders?uuid=${uuid}`, options )\r\n\t\t\t\t.then( function ( response ) {\r\n\t\t\t\t\tconst descArray = response.data.orders.reverse();\r\n\t\t\t\t\tdispatch( loadUserOrdersSuccess( descArray ) );\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( console.error );\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function createUserOrder( user ) {\r\n\treturn dispatch => {\r\n\t\taxios.post( \"/order\", user, options )\r\n\t\t\t.then( function ( response ) {\r\n\t\t\t\tdispatch( createOrderSuccess(\r\n\t\t\t\t\tresponse.data.order )\r\n\t\t\t\t);\r\n\t\t\t} )\r\n\t\t\t.catch( console.error );\r\n\t};\r\n}\r\n\r\nexport function loadUserOrdersSuccess( orders ) {\r\n\treturn { type: types.LOAD_USER_ORDERS_SUCCESS, orders };\r\n}\r\n\r\nexport function createOrderSuccess( order ) {\r\n\treturn { type: types.CREATE_USER_ORDER_SUCCESS, order };\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles( {\r\n\tlist: {\r\n\t\twidth: 250,\r\n\t},\r\n\tlistItem:{\r\n\t\theight:60,\r\n\t\tcolor: \"#ff037d\",\r\n\t\t\"& span\":{\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"cursive\"\r\n\t\t}\r\n\t},\r\n\tlistIcon:{\r\n\t\tcolor: \"#ff037d\",\r\n\t\tfontSize:28\r\n\t},\r\n\tfullList: {\r\n\t\twidth: \"auto\",\r\n\t},\r\n\tdivider:{\r\n\t\tmarginTop:20\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor:\"white\",\r\n\t\tfontSize: 40,\r\n\t\tmarginRight:10\r\n\t}\r\n} );\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HistoryIcon from \"@material-ui/icons/HistorySharp\";\r\nimport FaceIcon from \"@material-ui/icons/FaceSharp\";\r\nimport FingerPrintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCartSharp\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuSharp\";\r\nimport { useStyles } from \"./NavigationDrawerStyle\";\r\n\r\nconst NavDrawer = ( { history } ) => {\r\n\tconst classes = useStyles();\r\n\tconst [ state, setState ] = React.useState( {\r\n\t\ttop: false,\r\n\t\tleft: false,\r\n\t\tbottom: false,\r\n\t\tright: false,\r\n\t} );\r\n\r\n\tconst toggleDrawer = ( anchor, open ) => ( event ) => {\r\n\t\tif ( event.type === \"keydown\" && ( event.key === \"Tab\" || event.key === \"Shift\" ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetState( { ...state, [anchor]: open } );\r\n\t};\r\n\r\n\tconst list = ( anchor ) => (\r\n\t\t<div\r\n\t\t\tclassName={clsx( classes.list, {\r\n\t\t\t\t[classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n\t\t\t} )}\r\n\t\t\trole=\"presentation\"\r\n\t\t\tonClick={toggleDrawer( anchor, false )}\r\n\t\t\tonKeyDown={toggleDrawer( anchor, false )}>\r\n\t\t\t<List>\r\n\t\t\t\t{[ \"\" ].map( ( text, index ) => (\r\n\t\t\t\t\t<ListItem button key={text}>\r\n\t\t\t\t\t\t<ListItemText primary={text} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t) )}\r\n\t\t\t</List>\r\n\t\t\t<Divider className={classes.divider}/>\r\n\t\t\t<List>\r\n\t\t\t\t{[ [ \"Order\", \"/\", <ShoppingCartIcon key={1} className={classes.listIcon}/> ],\r\n\t\t\t\t\t[ \"My Orders\", \"/orders\", <HistoryIcon key={2} className={classes.listIcon}/> ],\r\n\t\t\t\t\t[ \"Admin?\", \"/admin\", <FaceIcon key={3} className={classes.listIcon}/> ] ].map( ( navItem, index ) => (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tkey={navItem[0]}\r\n\t\t\t\t\t\tonClick={()=> history.push( navItem[1] )}\r\n\t\t\t\t\t\tclassName={classes.listItem}>\r\n\t\t\t\t\t\t<ListItemIcon>{navItem[2]}</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary={navItem[0]} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t) )}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{[ \"left\" ].map( ( anchor ) => (\r\n\t\t\t\t<React.Fragment key={anchor}>\r\n\t\t\t\t\t<Button onClick={toggleDrawer( anchor, true )}>\r\n\t\t\t\t\t\t<MenuOpenIcon className={classes.menuButton}/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Drawer anchor={anchor}\r\n\t\t\t\t\t\topen={state[anchor]}\r\n\t\t\t\t\t\tonClose={toggleDrawer( anchor, false )}>\r\n\t\t\t\t\t\t{list( anchor )}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t) )}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter( NavDrawer ) ;\r\n","import axios from \"axios\";\r\nimport * as types from \"./actionTypes\";\r\n\r\nconst options = {\r\n\theaders: { \"Content-Type\": \"application/json\" }\r\n};\r\n\r\nexport function adminChanged( admin ) {\r\n\treturn dispatch => {\r\n\t\tdispatch( adminChangedSuccess( admin ) );\r\n\t};\r\n}\r\n\r\nexport function loadAdminOrders( admin ) {\r\n\treturn dispatch => {\r\n\t\taxios.get( `/allOrders?pwd=${admin.adminPassword}`, options )\r\n\t\t\t.then( function ( response ) {\r\n\t\t\t\tadmin.users= response.data.users;\r\n\t\t\t\tdispatch( adminChangedSuccess( { ...admin } ) );\r\n\t\t\t} )\r\n\t\t\t.catch( console.error );\r\n\t};\r\n}\r\n\r\n\r\nexport function adminChangedSuccess( admin ) {\r\n\treturn { type: types.ADMIN_CHANGED_SUCCESS, admin };\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles( ( theme ) => ( {\r\n\troot:{\r\n\r\n\t},\r\n\tloginForm: {\r\n\t\tflexGrow: 1,\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tfields:{\r\n\t\theight: 500,\r\n\t\tmargin: 50,\r\n\t},\r\n\tfield:{\r\n\t\twidth: 245\r\n\t},\r\n\tbuttons: {\r\n\t\t\"& > *\": {\r\n\t\t\theight:80,\r\n\t\t\twidth:200,\r\n\t\t\tmargin: theme.spacing( 1 ),\r\n\t\t},\r\n\t},\r\n} ) );","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport const renderTextField = ( {\r\n\tlabel,\r\n\tinput,\r\n\tmeta: { touched, invalid, error },\r\n\t...custom\r\n} ) => (\r\n\t<TextField\r\n\t\tlabel={label}\r\n\t\terror={touched && invalid}\r\n\t\thelperText={touched && error}\r\n\t\tvariant=\"outlined\"\r\n\t\t{...input}\r\n\t\t{...custom}\r\n\t/>\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { adminChanged } from \"../../actions/adminActions\";\r\nimport { useStyles } from \"./LoginStyle\";\r\nimport { renderTextField } from \"../index\";\r\n\r\nconst validate = values => {\r\n\tconst errors = {};\r\n\tconst requiredFields = [ \"password\" ];\r\n\trequiredFields.forEach( field => {\r\n\t\tif ( !values[field] ) {\r\n\t\t\terrors[field] = \"Required\";\r\n\t\t}\r\n\t} );\r\n\treturn errors;\r\n};\r\n\r\nconst LoginForm = ( props ) => {\r\n\tconst classes = useStyles();\r\n\tconst { pristine, reset, submitting, admin, dispatch, history } = props;\r\n\r\n\tconst login = () => {\r\n\t\thistory.push( \"/adminOrders\" );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<form\r\n\t\t\t\tnoValidate\r\n\t\t\t\tclassName={classes.loginForm}>\r\n\t\t\t\t<div className={classes.fields}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tlabel=\"Enter Password\"\r\n\t\t\t\t\t\tclassName={classes.field}\r\n\t\t\t\t\t\tcomponent={renderTextField}\r\n\t\t\t\t\t\tonChange={passwordChanged}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={login}\r\n\t\t\t\t\t\tdisabled={pristine || submitting}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\r\n\tfunction passwordChanged( event, newValue ){\r\n\t\tadmin.adminPassword = newValue;\r\n\t\tdispatch( adminChanged( { ...admin } ) );\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = function ( state ) {\r\n\treturn {\r\n\t\tadmin: state.admin\r\n\t};\r\n};\r\n\r\nexport default reduxForm ( {\r\n\tform: \"LoginForm\",\r\n\tvalidate,\r\n} )( connect( mapStateToProps )( LoginForm ) );\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport BackgroundImage from \"../../assets/brick-room-opacity_max.png\";\r\n\r\nexport const useStyles = makeStyles( ( theme ) => ( {\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\t/*\r\n\t\tbackground: `url(${BackgroundImage})\r\n\t\t\t\t\t no-repeat center center fixed`\r\n\t\t*/\r\n\t},\r\n\tgrid: {\r\n\t\tmaxWidth: \"600px\",\r\n\t},\r\n\tbutton: {\r\n\t\tfontWeight: \"bold\",\r\n\t\theight: \"100px\",\r\n\t\twidth: \"300px\",\r\n\t\tborderWidth: \"medium\",\r\n\t\tmargin: \"0 0 20px 0\"\r\n\t},\r\n\tpickSomePhotosText:{\r\n\t\tpaddingTop: \"2rem\",\r\n\t\ttextTransform: \"uppercase\",\r\n\t\tfontWeight: \"700\",\r\n\t\tfontSize: \"14px\",\r\n\t\tletterSpacing: \"1.6px\",\r\n\t\tcolor: \"#8c8c8c\",\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tminHeight:\"40px\",\r\n\t}\r\n} ) );\r\n","import * as React from \"react\";\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport \"./UploadImage.scss\";\r\n \r\nconst maxNumber = 10;\r\nconst maxMbFileSize = 5;\r\nclass UploadImage extends React.Component {\r\n\r\n  onChange = (imageList) => {\r\n    this.props.callback(this.props.imageNumber, imageList);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ImageUploading\r\n        onChange={this.onChange}\r\n        maxNumber={maxNumber}\r\n        multiple={false}\r\n        maxFileSize={maxMbFileSize}\r\n        acceptType={[\"jpg\", \"gif\", \"png\",\"jpeg\"]}\r\n        defaultValue={[]}>\r\n        {({ imageList, onImageUpload, onImageRemoveAll }) => (\r\n          <>\r\n            {!imageList.length ? \r\n              <Button\r\n                className=\"add-action\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={onImageUpload}>\r\n                  <AddIcon className=\"add-icon\">\r\n                    add\r\n                  </AddIcon>\r\n              </Button> : \r\n              undefined\r\n            }\r\n\r\n            {imageList.map((image) => (\r\n              <div key={image.key}>\r\n                <img \r\n                  src={image.dataURL} \r\n                  className=\"image\"\r\n                  onClick={image.onUpdate}/>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </ImageUploading>\r\n    );\r\n  }\r\n}\r\nUploadImage.propTypes = {};\r\n\r\nexport default UploadImage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Frame from \"../../assets/white-frame.svg\";\r\nimport UploadImage from \"../uploadImage/UploadImage\";\r\nimport \"./FramedImage.scss\";\r\n\r\nexport default function FramedImage( { isSelected, imageNumber, image, callback } ) {\r\n\treturn (\r\n\t\t<div className=\"framedImageComponent\">\r\n\t\t\t<div className={isSelected ? \"tile\" : \"tile unselected animated\"}>\r\n\t\t\t\t<div className=\"preview\">\r\n\t\t\t\t\t{image ?\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={image.location}\r\n\t\t\t\t\t\t\tclassName=\"image\"/>\r\n\t\t\t\t\t\t: <UploadImage\r\n\t\t\t\t\t\t\timageNumber={imageNumber}\r\n\t\t\t\t\t\t\tcallback={callback}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tileFrame\">\r\n\t\t\t\t\t{isSelected ? (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"frame\"\r\n\t\t\t\t\t\t\tonClick={( e ) => {e.preventDefault(); e.stopPropagation();}}\r\n\t\t\t\t\t\t\tsrc={Frame}/>\r\n\t\t\t\t\t) : undefined}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nFramedImage.propTypes = {\r\n\tisSelected: PropTypes.bool.isRequired,\r\n\timageNumber: PropTypes.number.isRequired,\r\n\timage: PropTypes.object,\r\n\tcallback: PropTypes.func\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles( ( theme ) => ( {\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tmaxWidth: \"80vh\",\r\n\t},\r\n\torderForm: {\r\n\t\tmargin: \"60px 30px 40px\",\r\n\t},\r\n\ttextField:{\r\n\t\tminWidth:\"36vh\",\r\n\t\t\"& input\":{\r\n\t\t\tfontFamily: \"cursive\",\r\n\t\t}\r\n\t},\r\n\tbuttons: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing( 1 ),\r\n\t\t},\r\n\t},\r\n} ) );\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { userChanged } from \"../../actions/userActions\";\r\nimport { useStyles } from \"./OrderFormStyle\";\r\nimport { renderTextField } from \"../index\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst validate = values => {\r\n\tconst errors = {};\r\n\tconst requiredFields = [ \"name\", \"address\", \"email\" ];\r\n\trequiredFields.forEach( field => {\r\n\t\tif ( !values[field] ) {\r\n\t\t\terrors[field] = \"Required\";\r\n\t\t}\r\n\t} );\r\n\tif ( values.email &&\r\n\t\t!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test( values.email ) ) {\r\n\t\terrors.email = \"Invalid email address\";\r\n\t}\r\n\treturn errors;\r\n};\r\n\r\nconst OrderForm = ( props ) => {\r\n\tconst classes = useStyles();\r\n\tconst { pristine, reset, submitting, user, dispatch } = props;\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tnoValidate\r\n\t\t\tautoComplete=\"off\"\r\n\t\t\tclassName={classes.orderForm}>\r\n\t\t\t<Grid\r\n\t\t\t\tclassName={classes.grid}\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tspacing={1}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tlabel=\"Full Name\"\r\n\t\t\t\t\t\tcomponent={renderTextField}\r\n\t\t\t\t\t\tonChange={nameChanged}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\t\tlabel=\"Full Shipping Address\"\r\n\t\t\t\t\t\tcomponent={renderTextField}\r\n\t\t\t\t\t\tonChange={addressChanged}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\tcomponent={renderTextField}\r\n\t\t\t\t\t\tonChange={emailChanged}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</form>\r\n\t);\r\n\r\n\tfunction nameChanged( event, newValue ){\r\n\t\tuser.order.name= newValue;\r\n\t\tdispatch( userChanged( { ...user } ) );\r\n\t}\r\n\r\n\tfunction addressChanged( event, newValue ){\r\n\t\tuser.order.address= newValue;\r\n\t\tdispatch( userChanged( { ...user } ) );\r\n\t}\r\n\r\n\tfunction emailChanged( event, newValue ){\r\n\t\tuser.order.email= newValue;\r\n\t\tdispatch( userChanged( { ...user } ) );\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = function ( state ) {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t};\r\n};\r\n\r\nexport default reduxForm ( {\r\n\tform: \"OrderForm\",\r\n\tvalidate,\r\n} )( connect( mapStateToProps )( OrderForm ) );","import React, { useState } from \"react\";\r\nimport { useStyles } from \"./imagesWallStyle\";\r\nimport { connect } from \"react-redux\";\r\nimport { userChanged } from \"../../actions/userActions\";\r\nimport { createUserOrder } from \"../../actions/orderActions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FramedImage from \"../framedImage/FramedImage\";\r\nimport OrderForm from \"../orderForm/OrderForm\";\r\n\r\nconst ImagesWall = ( { user, dispatch, history } ) => {\r\n\tconst classes = useStyles();\r\n\tconst [ images, setImages ] = useState( [ ] );\r\n\r\n\tconst imageSelectionChanged = ( imageNumber, image ) =>{\r\n\t\tif( isItemsSelected( image ) ){\r\n\t\t\timages[imageNumber] = image[0];\r\n\t\t\tsetImages( [ ...images ] );\r\n\t\t} else {\r\n\t\t\timages.splice( imageNumber, 1 );\r\n\t\t\tsetImages( [ ...images ] );\r\n\t\t}\r\n\t\tuser.order.images = images;\r\n\t\tdispatch( userChanged( { ...user } ) );\r\n\t};\r\n\r\n\tconst submitOrder = () => {\r\n\t\tuser.order = {\r\n\t\t\tuuid: uuidv4(),\r\n\t\t\tname: user.order.name,\r\n\t\t\taddress: user.order.address,\r\n\t\t\temail: user.order.email,\r\n\t\t\tdate: new Date(),\r\n\t\t\timages\r\n\t\t};\r\n\t\tdispatch( createUserOrder( user ) );\r\n\t\tsetTimeout( ()=>{history.push( \"/orders\" );}, 4000 );\r\n\t};\r\n\r\n\tconst isItemsSelected = array => Array.isArray( array ) && array.length;\r\n\tconst isOrderComplete = images => isItemsSelected( images ) && user.order.address;\r\n\r\n\tconst numOfTiles = isMobileRes() ? [ 1 ] : [ 1, 2, 3, 4 ];\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.pickSomePhotosText}>\r\n\t\t\t\t\tpick some photos!\r\n\t\t\t</div>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tclassName={classes.grid}\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tspacing={4}>\r\n\t\t\t\t{numOfTiles.map( ( val, index ) => (\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\titem xs={12} sm={6}>\r\n\t\t\t\t\t\t<FramedImage\r\n\t\t\t\t\t\t\timageNumber={index}\r\n\t\t\t\t\t\t\tcallback={imageSelectionChanged}\r\n\t\t\t\t\t\t\tisSelected={images[index] ? true : false}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t) )}\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<OrderForm/>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.button}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tonClick={submitOrder}\r\n\t\t\t\tdisabled={!isOrderComplete( images )}>\r\n\t\t\t\t\tOrder\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n\r\n\tfunction isMobileRes() {\r\n\t\treturn ( ( window.innerWidth <= 400 ) );\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = function ( state ) {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t};\r\n};\r\n\r\nexport default connect( mapStateToProps )( ImagesWall ) ;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst fontFamily = \"cursive\";\r\n\r\nexport const useStyles = makeStyles( ( theme ) => ( {\r\n\troot: {\r\n\t\tmaxWidth: 345,\r\n\t\tborderRadius:10,\r\n\t\tmargin:\"auto\"\r\n\t},\r\n\tmedia: {\r\n\t\theight: 0,\r\n\t\tpaddingTop: \"36.25%\" // 16:9\r\n\t},\r\n\texpand: {\r\n\t\ttransform: \"rotate(0deg)\",\r\n\t\tmarginLeft: \"auto\",\r\n\t\ttransition: theme.transitions.create( \"transform\", {\r\n\t\t\tduration: theme.transitions.duration.shortest,\r\n\t\t} ),\r\n\t},\r\n\texpandOpen: {\r\n\t\ttransform: \"rotate(180deg)\",\r\n\t},\r\n\tavatar: {\r\n\t\topacity: 0.8,\r\n\t\tfontFamily:fontFamily,\r\n\t},\r\n\tcenter: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tmargin:40,\r\n\t},\r\n\ttypography: {\r\n\t\t\"& span\": {\r\n\t\t\tfontFamily:fontFamily,\r\n\t\t}\r\n\t},\r\n\tid: {\r\n\t\tmarginLeft: 29,\r\n\t\tfontSize: 11,\r\n\t\tfontFamily:fontFamily,\r\n\t\tlineHeight: 2,\r\n\t}\r\n} ) );\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FramedImage from \"../framedImage/FramedImage\";\r\nimport moment from \"moment-es6\";\r\nimport { useStyles } from \"./OrderCardStyle\";\r\n\r\nconst OrderCard = ( { order, hidePreview } ) => {\r\n\tconst classes = useStyles();\r\n\tconst [ expanded, setExpanded ] = React.useState( false );\r\n\r\n\tconst handleExpandClick = () => {\r\n\t\tsetExpanded( !expanded );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardHeader\r\n\t\t\t\tavatar={\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\taria-label=\"recipe\"\r\n\t\t\t\t\t\tclassName={classes.avatar}>\r\n\t\t\t\t\t\t{order.name.charAt( 0 )}\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t}\r\n\t\t\t\ttitle={order.address}\r\n\t\t\t\tsubheader={ order.date ?\r\n\t\t\t\t\tmoment( order.date ).format( \"MM ddd, YYYY hh:mm:ss a\" )\r\n\t\t\t\t\t:undefined\r\n\t\t\t\t}\r\n\t\t\t\tclassName={classes.typography}/>\r\n\t\t\t{hidePreview ?\r\n\t\t\t\tundefined :\r\n\t\t\t\t<CardMedia\r\n\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\timage={order.images[0].location}\r\n\t\t\t\t\ttitle=\"Paella dish\"/>\r\n\t\t\t}\r\n\t\t\t<CardActions disableSpacing>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"add to favorites\"\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\tstyle={{ opacity:0.4 }}>\r\n\t\t\t\t\t<FavoriteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"share\"\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\tstyle={{ opacity:0.4 }}>\r\n\t\t\t\t\t<ShareIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tclsx( classes.expand, { [classes.expandOpen]: expanded, } )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonClick={handleExpandClick}\r\n\t\t\t\t\taria-expanded={expanded}\r\n\t\t\t\t\taria-label=\"show more\">\r\n\t\t\t\t\t<ExpandMoreIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</CardActions>\r\n\t\t\t<Collapse\r\n\t\t\t\tin={expanded}\r\n\t\t\t\ttimeout=\"auto\"\r\n\t\t\t\tunmountOnExit>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\tcomponent=\"p\"\r\n\t\t\t\t\t\tclassName={classes.id}>\r\n\t\t\t\t\t\tTO: {order.name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\tcomponent=\"p\"\r\n\t\t\t\t\t\tclassName={classes.id}>\r\n\t\t\t\t\t\tID: {order.uuid}\r\n\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t{order.images.map( ( img, index ) =>(\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={classes.center}\r\n\t\t\t\t\t\t\tkey={index}>\r\n\t\t\t\t\t\t\t<FramedImage\r\n\t\t\t\t\t\t\t\timageNumber={index}\r\n\t\t\t\t\t\t\t\tisSelected={true}\r\n\t\t\t\t\t\t\t\timage={img}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) )}\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Collapse>\r\n\t\t</Card>\r\n\t);\r\n};\r\nOrderCard.propTypes = {\r\n\torder: PropTypes.object.isRequired,\r\n\thidePreview: PropTypes.bool\r\n};\r\n\r\nexport default OrderCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport OrderCard from \"../orderCard/OrderCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst OrderList = ( { orders, hidePreview } ) => {\r\n\treturn (\r\n\t\t<div className=\"OrderListComponent\">\r\n\t\t\t<Grid\r\n\t\t\t\tclassName=\"grid\"\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tspacing={1}>\r\n\r\n\t\t\t\t{orders.map( order=>( order ?\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tclassName=\"gridItem\"\r\n\t\t\t\t\t\tkey={order.uuid}\r\n\t\t\t\t\t\titem xs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={3}>\r\n\t\t\t\t\t\t<OrderCard\r\n\t\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\t\thidePreview={hidePreview}/>\r\n\t\t\t\t\t</Grid> : undefined ) )}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\nOrderList.propTypes = {\r\n\torders: PropTypes.array.isRequired,\r\n\thidePreview : PropTypes.bool\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment-es6\";\r\nimport OrderList from \"../orderLIst/OrderList\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport SearchIcon from \"@material-ui/icons/SearchSharp\";\r\nimport \"./UserOrderList.scss\";\r\n\r\nconst UserOrderList = ( { orders } ) => {\r\n\r\n\tconst [ _orders, setOrders ] = useState( [] );\r\n\r\n\tuseEffect( () => {\r\n\t\tif( orders && orders.length ){\r\n\t\t\torders.forEach( order => {\r\n\t\t\t\torder.date = moment( order.date )\r\n\t\t\t\t\t.format( \"MM/DD/YYYY\" );\r\n\t\t\t} );\r\n\t\t\tsetOrders( orders );\r\n\t\t}\r\n\t}, [ orders ] );\r\n\r\n\treturn (\r\n\t\t<div className=\"UserOrderList\">\r\n\t\t\t<Autocomplete\r\n\t\t\t\tclassName=\"searchBar\"\r\n\t\t\t\tfreeSolo\r\n\t\t\t\toptions={Array.from( new Set( orders.map( option => option.date ) ) )}\r\n\t\t\t\tonChange={( event, newValue ) => {\r\n\t\t\t\t\tnewValue?\r\n\t\t\t\t\t\tsetOrders( orders.filter( order => order.date === newValue ) ) :\r\n\t\t\t\t\t\tsetOrders( orders );\r\n\t\t\t\t}}\r\n\t\t\t\trenderInput={( params ) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\tlabel= {( <SearchIcon/> )}\r\n\t\t\t\t\t\tplaceholder=\"Search by date..\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\r\n\t\t\t<OrderList orders={_orders}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nUserOrderList.propTypes = {\r\n\torders: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = function ( state ) {\r\n\treturn {\r\n\t\torders: state.orders\r\n\t};\r\n};\r\n\r\nexport default connect( mapStateToProps )( UserOrderList );","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadAdminOrders } from \"../../actions/adminActions\";\r\nimport OrderList from \"../orderLIst/OrderList.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport SearchIcon from \"@material-ui/icons/SearchSharp\";\r\n\r\nconst AdminOrderList = ( { admin, dispatch } ) => {\r\n\tconst [ _users, setUsers ] = useState( [] );\r\n\r\n\tuseEffect( () => {\r\n\t\t( async () => {dispatch( loadAdminOrders( admin ) ); } )();\r\n\t}, [ admin.adminPassword ] );\r\n\r\n\tuseEffect( () => {\r\n\t\tif( admin && admin.users.length ){\r\n\t\t\tsetUsers( admin.users );\r\n\t\t}\r\n\t}, [ admin.users ] );\r\n\r\n\treturn (\r\n\t\t<div className=\"adminOrderListComponent\">\r\n\t\t\t<Autocomplete\r\n\t\t\t\tclassName=\"searchBar\"\r\n\t\t\t\tfreeSolo\r\n\t\t\t\toptions= { _users.map( option => option.uuid ) }\r\n\t\t\t\tonChange={( event, newValue ) => {\r\n\t\t\t\t\tnewValue?\r\n\t\t\t\t\t\tsetUsers( _users.filter( user => user.uuid === newValue ) ) :\r\n\t\t\t\t\t\tsetUsers( admin.users );\r\n\t\t\t\t}}\r\n\t\t\t\trenderInput={( params ) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\tlabel= {( <SearchIcon/> )}\r\n\t\t\t\t\t\tplaceholder=\"Search by user id..\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\r\n\t\t\t{_users.map( user => (\r\n\t\t\t\t<div key={user.uuid}>\r\n\t\t\t\t\t<OrderList\r\n\t\t\t\t\t\torders={user.orders}\r\n\t\t\t\t\t\thidePreview={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) )}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAdminOrderList.propTypes = {\r\n\tadmin: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = function ( state ) {\r\n\treturn {\r\n\t\tadmin: state.admin\r\n\t};\r\n};\r\n\r\nexport default connect( mapStateToProps )( AdminOrderList );\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { userChanged } from \"./actions/userActions\";\r\nimport { loadUserOrders } from \"./actions/orderActions\";\r\nimport NavDrawer from \"./components/navigationDrawer/NavigationDrawer\";\r\nimport Login from \"./components/login/Login\";\r\nimport ImagesWall from \"./components/imagesWall/ImagesWall\";\r\nimport UserOrderList from \"./components/UserOrderList/UserOrderList\";\r\nimport AdminOrderList from \"./components/adminOrderList/AdminOrderList\";\r\n\r\nfunction App( { user, dispatch } ) {\r\n\r\n\tuseEffect( () => {\r\n\t\t( async ()=>{\r\n\t\t\tconst uuid = Cookies.get( \"user\" );\r\n\t\t\tif( !uuid ){\r\n\t\t\t\tCookies.set( \"user\", uuidv4(), { expires: 7 } );\r\n\t\t\t}\r\n\t\t\tuser.uuid = uuid;\r\n\t\t\tawait dispatch( userChanged( { ...user } ) );\r\n\t\t\tawait dispatch( loadUserOrders( user.uuid ) );\r\n\t\t} )();\r\n\t}, [] );\r\n\r\n\treturn (\r\n\t\t<Router history={createBrowserHistory()}>\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<NavDrawer/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<div className=\"app-routes\">\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path=\"/orders\" component={UserOrderList}/>\r\n\t\t\t\t\t\t\t<Route path=\"/adminOrders\" component={AdminOrderList}/>\r\n\t\t\t\t\t\t\t<Route path=\"/admin\" component={Login} />\r\n\t\t\t\t\t\t\t<Route path=\"/\" component={ImagesWall} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"footer\"/>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = function ( state ) {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t};\r\n};\r\n\r\nexport default connect( mapStateToProps )( App ) ;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n\tuser:{\r\n\t\tuuid:null,\r\n\t\torder:{\r\n\t\t\tuuid:null,\r\n\t\t\tname:null,\r\n\t\t\tdate: null,\r\n\t\t\temail:null,\r\n\t\t\taddress:null,\r\n\t\t\timages:[]\r\n\t\t},\r\n\t},\r\n\torders: [],\r\n\tadmin:{\r\n\t\tadminPassword:null,\r\n\t\tusers: []\r\n\t}\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as reduxFormReducer } from \"redux-form\";\r\nimport orders from \"./ordersReducer\";\r\nimport user from \"./userReducer\";\r\nimport admin from \"./adminReducer\";\r\n\r\nconst rootReducer = combineReducers( {\r\n\tuser,\r\n\torders,\r\n\tadmin,\r\n\tform: reduxFormReducer,\r\n} );\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function userReducer( state = initialState.user, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.USER_CHANGED_SUCCESS:{\r\n\t\treturn action.user;\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/* eslint-disable no-fallthrough */\r\nimport * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function ordersReducer( state = initialState.orders, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.LOAD_USER_ORDERS_SUCCESS:{\r\n\t\treturn action.orders;\r\n\t}\r\n\tcase types.CREATE_USER_ORDER_SUCCESS: {\r\n\t\tstate = [ action.order, ...state ];\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function userReducer( state = initialState.admin, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.ADMIN_CHANGED_SUCCESS:{\r\n\t\treturn action.admin;\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nconst store = createStore(\n\trootReducer,\n\tapplyMiddleware( thunk )\n);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<MuiThemeProvider theme={responsiveFontSizes( createMuiTheme() )}>\n\t\t\t\t<App />\n\t\t\t</MuiThemeProvider>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById( \"root\" )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}